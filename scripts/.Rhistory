source('C:/Users/Kyle Gerst/OneDrive/Active/NET-SS3 - Dissertation Study/scripts/analyses - egoNET.R', echo=TRUE)
View(df)
summary(lm(Contact_AVG ~ Group + ASP_LT, data = df))
table(df$Group)
summary(lm(Density ~ Group + ASP_LT, data = df))
summary(lm(Size ~ Group + ASP_LT, data = df))
summary(lm(Density ~ Alc_Grp + ASP_LT, data = df))
summary(lm(Contact_AVG ~ Alc_Grp + ASP_LT, data = df))
summary(lm(AlcFrequency_AVG ~ Alc_Grp + ASP_LT, data = df))
summary(lm(AlcQuantity_AVG ~ Alc_Grp + ASP_LT, data = df))
summary(lm(AlcDrinkWithPerson_AVG ~ Alc_Grp + ASP_LT, data = df))
summary(lm(AlcDrinkWithPerson_AVG ~ Group, data = df))
ANOVA(lm(AlcDrinkWithPerson_AVG ~ Group, data = df))
anova(lm(AlcDrinkWithPerson_AVG ~ Group, data = df))
anova(lm(AlcDrinkWithPerson_AVG ~ factor(Group), data = df))
source('C:/Users/Kyle Gerst/OneDrive/Active/NET-SS3 - Dissertation Study/scripts/analyses - egoNET.R', echo=TRUE)
.05/4
df <- read.csv(file = '../data/processed/data - net-ss3 merged - 2018-03-13.csv', header = TRUE, sep = ",")
df_long <- read.csv(file = '../data/processed/data - net-ss3 alter merged - 2018-03-13.csv', header = TRUE, sep = ",")
source('C:/Users/Kyle Gerst/OneDrive/Active/NET-SS3 - Dissertation Study/scripts/analyses - egoNET.R', echo=TRUE)
source('C:/Users/Kyle Gerst/OneDrive/Active/NET-SS3 - Dissertation Study/scripts/analyses - egoNET.R', echo=TRUE)
lmer(Alc_Frequency ~ MJFrequency + (1|SubID), data = df_long)
lmer(AlcFrequency ~ MJFrequency + (1|SubID), data = df_long)
lmer(MJFrequency ~ AlcFrequency + (1|SubID), data = df_long)
summary(lmer(MJFrequency ~ AlcFrequency + (1|SubID), data = df_long))
summary(lme4::glmer(MJFrequency ~ AlcFrequency + (1|SubID), data = df_long, family = poisson))
hist(df_long$AlcFrequency)
hist(df_long$MJFrequency)
?lme4::glmer
rpois(100, 5)
curve(rpois(100, 5))
hist(rpois(100, 5))
hist(rpois(10000, 5))
hist(rpois(10000, 1))
hist(rpois(100000, 1))
hist(rpois(1000000, 1))
hist(rpois(1000000, .1))
hist(rpois(1000000, .5))
hist(rpois(1000000, 1))
hist(rpois(1000000, .08))
hist(rpois(1000000, .8))
hist(df_long$MJFrequency)
hist(df_long$AlcFrequency)
df['Alc_Density'] <- df$NumOfDrinkers / df$Size
hist(df$Alc_Density)
summary(lm(Alc_Density ~ Alc_Grp + ASP_LT, data = df))
summary(lm(Contact_AVG ~ Alc_Grp + ASP_LT, data = df))
df['MJ_Density'] <- df$NumOfMJUsers / df$Size
df['Drg_Density'] <- df$NumOfDrgUsers / df$Size
summary(lm(Alc_Density ~ Alc_Grp + ASP_LT, data = df))
summary(lm(MJ_Density ~ Alc_Grp + ASP_LT, data = df))
summary(lm(Drg_Density ~ Alc_Grp + ASP_LT, data = df))
plot(df$AL_PC, df$Alc_Density)
hist(df$AL_PC)
hist(log(df$AL_PC))
hist(scale(df$AL_PC, center = TRUE, scale = TRUE))
hist(scale(df$AL_PC, center = TRUE))
scale(df$AL_PC)
hist(scale(df$AL_PC))
plot(df$AL_PC, df$Alc_Density)
hist(df$Alc_Density)
plot(df$AL_PC, df$Alc_Density)
plot(log(df$AL_PC), df$Alc_Density)
plot(log(df$AL_PC), log(df$Alc_Density))
plot(log(df$AL_PC), log(df$Alc_Density))
plot(log(df$AL_PC), df$Alc_Density)
hist(df_long$MJFrequency)
hist(df_long$AlcFrequency)
m.nb <- glmer.nb(MJFrequency ~ AlcFrequency + (1|SubID), data = df_long, verbose = TRUE)
m.nb
logLik(m.nb)
plot(m.nb, resid(.) ~ SubID)
plot(df$AL_PC, df$Alc_Density)
ggplot(data = df, mapping = aes(x = AL_PC, y = Alc_Density, group = Alc_Grp)) +
geom_point()
ggplot(data = df, mapping = aes(x = AL_PC, y = Alc_Density, color = Alc_Grp)) +
geom_point()
hist(df$Alc_Density)
hist(log(df$Alc_Density))
hist(df$Alc_Density)
hist((df$Alc_Density)^2)
install.packages('EnvStats')
EnvStats::boxcox(df$AL_PC)
describe(df$AL_PC)
describe((df$AL_PC + 1))
describe(df$AL_PC + 1)
EnvStats::boxcox((df$AL_PC + 1))
boxcox(df$AL_PC)
for (package in c('tidyverse',
'psych',
'lme4',
'MASS')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
boxcox(df$AL_PC)
boxcox()
x <- df$AL_PC
boxcox(x)
x <- as.vector(df$AL_PC)
boxcox(x)
lm <- lm(Alc_Density ~ AL_PC, data = df)
boxcox(lm)
bc <- boxcox(lm)
lm <- lm(df$Alc_Density ~ df$AL_PC)
bc <- boxcox(lm)
y <- as.vector(df$Alc_Density)
x <- as.vector(df$AL_PC)
lm <- lm(y ~ x)
bc <- boxcox(lm)
(lambda <- bc$x[which.max(bc$y)])
powerTransform <- function(y, lambda1, lambda2 = NULL, method = "boxcox") {
boxcoxTrans <- function(x, lam1, lam2 = NULL) {
# if we set lambda2 to zero, it becomes the one parameter transformation
lam2 <- ifelse(is.null(lam2), 0, lam2)
if (lam1 == 0L) {
log(y + lam2)
} else {
(((y + lam2)^lam1) - 1) / lam1
}
}
switch(method
, boxcox = boxcoxTrans(y, lambda1, lambda2)
, tukey = y^lambda1
)
}
# re-run with transformation
mnew <- lm(powerTransform(y, lambda) ~ x)
# QQ-plot
op <- par(pty = "s", mfrow = c(1, 2))
qqnorm(m$residuals); qqline(m$residuals)
qqnorm(mnew$residuals); qqline(mnew$residuals)
par(op)
y <- as.vector(df$Alc_Density)
x <- as.vector(df$AL_PC)
m <- lm(y ~ x)
bc <- boxcox(lm)
(lambda <- bc$x[which.max(bc$y)])
powerTransform <- function(y, lambda1, lambda2 = NULL, method = "boxcox") {
boxcoxTrans <- function(x, lam1, lam2 = NULL) {
# if we set lambda2 to zero, it becomes the one parameter transformation
lam2 <- ifelse(is.null(lam2), 0, lam2)
if (lam1 == 0L) {
log(y + lam2)
} else {
(((y + lam2)^lam1) - 1) / lam1
}
}
switch(method
, boxcox = boxcoxTrans(y, lambda1, lambda2)
, tukey = y^lambda1
)
}
# re-run with transformation
mnew <- lm(powerTransform(y, lambda) ~ x)
# QQ-plot
op <- par(pty = "s", mfrow = c(1, 2))
qqnorm(m$residuals); qqline(m$residuals)
qqnorm(mnew$residuals); qqline(mnew$residuals)
par(op)
??boxcox
EnvStats::boxcox(y)
EnvStats::boxcox(y)$data
hist(EnvStats::boxcox(y)$data)
EnvStats::boxcox(x)$data
EnvStats::boxcox(x+1)$data
hist(EnvStats::boxcox(x+1)$data)
hist(x)
hist(x, density = 1)
hist(x, density = 10)
hist(x, density = 20)
hist(x, density = 20, col = 'red')
hist(x, density = 20, col = 'blue')
lm <- lm(Alc_Density ~ AL_PC, data = df)
summary(lm)
lm <- lm(Alc_Density ~ Alc_Grp, data = df)
summary(lm)
summary(lm(Alc_Density ~ Alc_Grp + ASP_LT, data = df))
summary(lm <- lm(Alc_Density ~ Alc_Grp + ASP_LT, data = df))
summary(lm)
hist(lm$residuals)
hist(df$Alc_Density)
hist(log10(df$Alc_Density))
hist(log(df$Alc_Density))
hist(df$Alc_Density)
# Title     : TODO
# Objective : TODO
# Created by: Kyle Gerst
# Created on: 3/9/2018
rm(list = ls())
cat('\014')
for (package in c('tidyverse',
'psych',
'lme4',
'MASS')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
path <- getwd()
df <- read.csv(file = '../data/processed/data - net-ss3 merged - 2018-03-13.csv', header = TRUE, sep = ",")
df_long <- read.csv(file = '../data/processed/data - net-ss3 alter merged - 2018-03-13.csv', header = TRUE, sep = ",")
df['Group_Alt'] <- df$Group
df$Group_Alt[df['Group_Alt'] == 3] <- 2
df['Group_Alt'] <- recode_factor(df$Group_Alt, `1` = 'Control', `2` = 'AUD')
df['ASP_LT'] <- df['AS_PC'] + df['CD_PC']
# Bi-split of Alcohol and ASP Problem Counts
df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 2), levels = c(1,2),labels = c('Low', 'High'))
df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 2), levels = c(1,2),labels = c('Low', 'High'))
# # Tert-split of Alcohol and ASP Problem Counts
# df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
# df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
df['Alc_Density'] <- df$NumOfDrinkers / df$Size
df['MJ_Density'] <- df$NumOfMJUsers / df$Size
df['Drg_Density'] <- df$NumOfDrgUsers / df$Size
table(df[c('Alc_Grp', 'ASP_Grp')])
cor(df_long[c('AlcFrequency', 'MJFrequency', 'DrgFrequency')])
summary(lm <- lm(Alc_Density ~ Alc_Grp + ASP_LT, data = df))
cor(df_long[c('AlcFrequency', 'MJFrequency', 'DrgFrequency')])
table(df_long$AlcFrequency)
cor.test(df_long[c('AlcFrequency', 'MJFrequency', 'DrgFrequency')])
cor.test(df_long$AlcFrequency, y = df_long$MJFrequency)
table(df_long[c('AlcFrequency', 'MJFrequency')])
table(df_long[c('MJFrequency')])
ggplot(data = df_long, mapping = aes(x = AlcFrequency, y = MJFrequency)) +
geom_point()
ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG)) +
geom_point()
ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point()
ggplot(data = df, mapping = aes(x = AlcFrequency_MED, y = MJFrequency_MED, color = Alc_Grp)) +
geom_point()
ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point()
for (package in c('tidyverse',
'psych',
'lme4',
'MASS',
'cowplot')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
p1 <- ggplot(data = df, mapping = aes(x = AL_PC, y = Alc_Density, color = Alc_Grp)) +
geom_point()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point()
p3 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point()
cowplot::plot_grid(p1, p2, p3, nrow = 3)
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point()
cowplot::plot_grid(p1, p2, nrow = 3)
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point() + theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point() + theme_bw()
cowplot::plot_grid(p1, p2, nrow = 3)
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point() + scale_color_grey() + theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point() + scale_color_grey() + theme_bw()
cowplot::plot_grid(p1, p2, nrow = 3)
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point() + scale_color_grey(start = 0.8, end = 0.2) + theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point() + scale_color_grey(start = 0.8, end = 0.2) + theme_bw()
cowplot::plot_grid(p1, p2, nrow = 3)
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = Alc_Grp)) +
geom_point() + scale_color_grey(start = 0.6, end = 0.2) + theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = Alc_Grp)) +
geom_point() + scale_color_grey(start = 0.6, end = 0.2) + theme_bw()
cowplot::plot_grid(p1, p2, nrow = 3)
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() + scale_color_grey(start = 0.8, end = 0.2) + theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() + scale_color_grey(start = 0.8, end = 0.2) + theme_bw()
cowplot::plot_grid(p1, p2, nrow = 3)
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient() +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient() +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
cowplot::plot_grid(p1, p2, nrow = 3)
cowplot::plot_grid(p1, p2, nrow = 2)
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient(low = 'blue') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient(low = 'blue') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
cowplot::plot_grid(p1, p2, nrow = 2)
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
cowplot::plot_grid(p1, p2, nrow = 2)
p1 <- ggplot(data = df, mapping = aes(x = AL_PC, y = Alc_Density, color = Alc_Grp)) +
geom_point()
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_color_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_color_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_color_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_color_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
cowplot::plot_grid(p1, p2, nrow = 2)
cowplot::plot_grid(p1, p2, nrow = 2)
rm(list = ls())
cat('\014')
for (package in c('tidyverse',
'psych',
'lme4',
'MASS',
'cowplot')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
path <- getwd()
df <- read.csv(file = '../data/processed/data - net-ss3 merged - 2018-03-13.csv', header = TRUE, sep = ",")
df_long <- read.csv(file = '../data/processed/data - net-ss3 alter merged - 2018-03-13.csv', header = TRUE, sep = ",")
df['Group_Alt'] <- df$Group
df$Group_Alt[df['Group_Alt'] == 3] <- 2
df['Group_Alt'] <- recode_factor(df$Group_Alt, `1` = 'Control', `2` = 'AUD')
df['ASP_LT'] <- df['AS_PC'] + df['CD_PC']
# Bi-split of Alcohol and ASP Problem Counts
df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 2), levels = c(1,2),labels = c('Low', 'High'))
df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 2), levels = c(1,2),labels = c('Low', 'High'))
# # Tert-split of Alcohol and ASP Problem Counts
# df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
# df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
df['Alc_Density'] <- df$NumOfDrinkers / df$Size
df['MJ_Density'] <- df$NumOfMJUsers / df$Size
df['Drg_Density'] <- df$NumOfDrgUsers / df$Size
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_color_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_color_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
cowplot::plot_grid(p1, p2, nrow = 2)
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
scale_fill_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
cowplot::plot_grid(p1, p2, nrow = 2)
# Frequency Plots
p1 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = MJFrequency_AVG, color = AL_PC)) +
geom_point() +
# scale_fill_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p2 <- ggplot(data = df, mapping = aes(x = AlcFrequency_AVG, y = DrgFrequency_AVG, color = AL_PC)) +
geom_point() +
# scale_fill_gradient(low = 'blue', high = 'black') +
# scale_color_grey(start = 0.8, end = 0.2) +
theme_bw()
p1
rm(list = ls())
cat('\014')
for (package in c('tidyverse',
'psych',
'betareg',
'lme4',
'MASS',
'cowplot')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
path <- getwd()
df <- read.csv(file = '../data/processed/data - net-ss3 merged - 2018-03-13.csv', header = TRUE, sep = ",")
df_long <- read.csv(file = '../data/processed/data - net-ss3 alter merged - 2018-03-13.csv', header = TRUE, sep = ",")
df['Group_Alt'] <- df$Group
df$Group_Alt[df['Group_Alt'] == 3] <- 2
df['Group_Alt'] <- recode_factor(df$Group_Alt, `1` = 'Control', `2` = 'AUD')
df['ASP_LT'] <- df['AS_PC'] + df['CD_PC']
df['AL_PC_Binary'] <- ifelse(df['AL_PC'] == 0, 1, 0)
# Bi-split of Alcohol and ASP Problem Counts
df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 2), levels = c(1,2),labels = c('Low', 'High'))
df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 2), levels = c(1,2),labels = c('Low', 'High'))
# # Tert-split of Alcohol and ASP Problem Counts
# df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
# df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
df['Alc_Density'] <- df$NumOfDrinkers / df$Size
df['MJ_Density'] <- df$NumOfMJUsers / df$Size
df['Drg_Density'] <- df$NumOfDrgUsers / df$Size
rm(list = ls())
cat('\014')
for (package in c('tidyverse',
'psych',
'betareg',
'lme4',
'MASS',
'cowplot')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
path <- getwd()
df <- read.csv(file = '../data/processed/data - net-ss3 merged - 2018-03-19.csv', header = TRUE, sep = ",")
df_long <- read.csv(file = '../data/processed/data - net-ss3 alter merged - 2018-03-19.csv', header = TRUE, sep = ",")
df['Group_Alt'] <- df$Group
df$Group_Alt[df['Group_Alt'] == 3] <- 2
df['Group_Alt'] <- recode_factor(df$Group_Alt, `1` = 'Control', `2` = 'AUD')
df['ASP_LT'] <- df['AS_PC'] + df['CD_PC']
df['AL_PC_Binary'] <- ifelse(df['AL_PC'] == 0, 1, 0)
# Bi-split of Alcohol and ASP Problem Counts
df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 2), levels = c(1,2),labels = c('Low', 'High'))
df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 2), levels = c(1,2),labels = c('Low', 'High'))
# # Tert-split of Alcohol and ASP Problem Counts
# df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
# df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
df['Alc_Density'] <- df$NumOfDrinkers / df$Size
df['MJ_Density'] <- df$NumOfMJUsers / df$Size
df['Drg_Density'] <- df$NumOfDrgUsers / df$Size
df_long %>% select(DM1_Female, Gender, Group) %>% group_by(DM1_Female) %>% mutate(GenderProp = mean(Gender))
df_long %>% select(DM1_Female, Gender, Group) %>% group_by(DM1_Female)
df_long %>% select(DM1_Female, Gender, Group)
df_long %>% select('DM1_Female', 'Gender', 'Group')
df_long %>% select('DM1_Female')
df_long %>% select('DM1_Female')
df_long['DM1_Female']
df_long %>% select(['DM1_Female'])
df_long %>% select('DM1_Female')
df_long %>% select(c('DM1_Female'))
rm(list = ls())
cat('\014')
for (package in c('tidyverse',
'psych',
'betareg',
'lme4',
# 'MASS',
'cowplot')) {
if (!require(package, character.only=TRUE, quietly=TRUE)) {
install.packages(package)
library(package, character.only=TRUE)
}
}
path <- getwd()
df <- read.csv(file = '../data/processed/data - net-ss3 merged - 2018-03-19.csv', header = TRUE, sep = ",")
df_long <- read.csv(file = '../data/processed/data - net-ss3 alter merged - 2018-03-19.csv', header = TRUE, sep = ",")
df['Group_Alt'] <- df$Group
df$Group_Alt[df['Group_Alt'] == 3] <- 2
df['Group_Alt'] <- recode_factor(df$Group_Alt, `1` = 'Control', `2` = 'AUD')
df['ASP_LT'] <- df['AS_PC'] + df['CD_PC']
df['AL_PC_Binary'] <- ifelse(df['AL_PC'] == 0, 1, 0)
# Bi-split of Alcohol and ASP Problem Counts
df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 2), levels = c(1,2),labels = c('Low', 'High'))
df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 2), levels = c(1,2),labels = c('Low', 'High'))
# # Tert-split of Alcohol and ASP Problem Counts
# df['Alc_Grp'] <- factor(ntile(df$AL_PC, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
# df['ASP_Grp'] <- factor(ntile(df$ASP_LT, n = 3), levels = c(1,2,3),labels = c('Low', 'Mod', 'High'))
df['Alc_Density'] <- df$NumOfDrinkers / df$Size
df['MJ_Density'] <- df$NumOfMJUsers / df$Size
df['Drg_Density'] <- df$NumOfDrgUsers / df$Size
df_long %>% select('DM1_Female')
df_long %>% select_('DM1_Female')
